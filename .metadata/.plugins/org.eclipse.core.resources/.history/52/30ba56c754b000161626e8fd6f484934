

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

import javax.swing.AbstractButton;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.border.EtchedBorder;
import javax.swing.border.TitledBorder;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;

public class Start extends JFrame implements ActionListener {
		
	public int len_list = 0;
	
	private Start() {
	super("PhotoRenamer");
	setSize(800, 600);
	setResizable(false);
	setDefaultCloseOperation(EXIT_ON_CLOSE);
	setLayout(new FlowLayout());
			
	JButton button0 = new JButton("Choose Directory");
	JButton button1 = new JButton("Add tag");
	JButton button2 = new JButton("Remove tag");
	JButton button3 = new JButton("Tags");
	JButton button4 = new JButton("History");
			
	JPanel Panel1 = new JPanel();
	Panel1.setBorder ( new TitledBorder ( new EtchedBorder (), "Display Area" ) );
		
	JTextArea textArea1 = new JTextArea(60, 35);
	textArea1.setEditable(false);
			
	JScrollPane scrollPane1 = new JScrollPane(textArea1);
	scrollPane1.setVerticalScrollBarPolicy ( ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS );
			
	Panel1.add(scrollPane1);
					
	add(button0);
	add(button1);
	add(button2);
	add(button3);
	add(button4);
			
	//textArea1.setText("a\n b \n a\n b \n a\n b \n b \n a\n b \n a\n b \n a\n b \n c \n a \n a \n");
			
	add(Panel1, BorderLayout.SOUTH);	
			
	button0.addActionListener(this);
	button1.addActionListener(this);
	button2.addActionListener(this);
	button3.addActionListener(this);
	button4.addActionListener(this);
	}
		
	public void actionPerformed(ActionEvent e) {
		
	String name = e.getActionCommand();
	BufferedReader reader2 = new BufferedReader(new InputStreamReader(System.in));
	Scanner reader = new Scanner(System.in);	
	
	if (name.equals("Choose Directory")) {
		DirectoryExplorer.buildWindow().setVisible(true);
		try {
			Image.openFile();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
	}
	
	else if (name.equals("Add tag")) {
		
		System.out.println("Select an image number.");
		
		while (!reader.hasNextInt()) {
			System.out.println("Please enter an integer.");
			reader.nextLine();
		}
		int numV = reader.nextInt();
		
		if ((numV > 0) && (numV <= FileChooserButtonListener.numberSelector)) {
			System.out.println("1. Add a new tag.");
			System.out.println("2. Add a pre-existing tag.");
			System.out.println("3. Revert back to a previous name.");
			
			while (!reader.hasNextInt()) {
				System.out.println("Please enter an integer.");
				reader.nextLine();
			}
			int num1 = reader.nextInt();
			try {
				if (num1 == 1) {
					System.out.println("Please type out a tag.");
					String newTag = reader2.readLine();
					FileChooserButtonListener.ImageListArray[numV-1].addTag(newTag);
				} else if (num1 == 2) {
					FileChooserButtonListener.ImageListArray[numV-1].tagSelection();
				} else if (num1 == 3) {
					FileChooserButtonListener.ImageListArray[numV-1].revert();
				} else {
					System.out.println("That is not a valid choice.");
				}
			} catch (IOException e1) {
				System.out.println("Please enter a valid number.");
				e1.printStackTrace();
			}	
		}
		else {
			System.out.println("That is not a valid choice!");
		}	
		}
	
	else if (name.equals("Remove tag")) { 
		
		System.out.println("Select an image number.");
		
		while (!reader.hasNextInt()) {
			System.out.println("Please enter an integer.");
			reader.nextLine();
		}
		int numV = reader.nextInt();
		if ((numV) > 0 && (numV) <= FileChooserButtonListener.numberSelector) {
			System.out.println("Type in the tag that you wish to remove.");
			String tagg1;
			try {
				tagg1 = reader2.readLine();
				FileChooserButtonListener.ImageListArray[numV-1].removeTag(tagg1);
			} catch (IOException e1) {
				System.out.println("That is not a valid option.");
				e1.printStackTrace();
			}
		}
		else {
			System.out.println("That is not a valid choice!");
		}
		} 
	
	else if (name.equals("Tags")) {
		
		System.out.println("There are " + Tag.count + "tags in use." );
		System.out.println(Tag.getNames());
	}
	
	else if (name.equals("History")) {
		
		System.out.println("Select an image number.");
		
		while (!reader.hasNextInt()) {
			System.out.println("Please enter an integer.");
			reader.nextLine();
		}
		int input3 = reader.nextInt();
		if ((input3 > 0) && (input3 <= FileChooserButtonListener.numberSelector)) {
			System.out.println(FileChooserButtonListener.ImageListArray[input3-1].getHistory());
		}
		else {
			System.out.println("That is not a valid choice!");
		}
	}
	}
	public static void main (String[] args) {
		new Start().setVisible(true);
	}
		

}
